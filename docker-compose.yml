version: '3.4'

services:
    zookeeper:
        image: wurstmeister/zookeeper
        ports:
            - "2181:2181"
        networks:
            - dev

    kafka:
        image: wurstmeister/kafka
        ports:
            - "29092:29092"
        environment:
            # KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:29092
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://kafka:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE # Asegúrate de que este nombre esté en advertised.listeners
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        depends_on:
            - zookeeper
        networks:
            - dev

    sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        container_name: sqlserver
        ports:
            - 1433:1433
        environment:
            - SA_PASSWORD=Ch411eng3
            - ACCEPT_EULA=Y
            - MSSQL_PID=Express
        volumes:
            - sqldata:/var/opt/mssql
        networks:
            - dev

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
        container_name: elasticsearch
        environment:
            - node.name=elasticsearch
            - cluster.name=es-docker-cluster
            - cluster.initial_master_nodes=elasticsearch
            - bootstrap.memory_lock=true
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - elastic_data:/usr/share/elasticsearch/data
        ports:
            - 9200:9200
        networks:
            - dev

    kibana:
        image: docker.elastic.co/kibana/kibana:7.9.0
        container_name: kibana
        ports:
            - 5601:5601
        environment:
            ELASTICSEARCH_URL: http://elasticsearch:9200
            ELASTICSEARCH_HOSTS: http://elasticsearch:9200
        depends_on:
            - elasticsearch
        networks:
            - dev

    n5api:
        build:
            context: .
            dockerfile: N5Api/Dockerfile
        ports:
            - "80:80"
            - "443:443"
        environment:
            - ConnectionStrings__DefaultConnection=Database=dbtest;User Id=sa;Password=Ch411eng3;TrustServerCertificate=true;MultipleActiveResultSets=True;Server=sqlserver,1433
            - Kafka__Server=kafka:29092
            - Topics__Permissions=Permissions
            - ElasticConfiguration__N5Index=n5_elastic_index
            - ElasticConfiguration__Uri=http://elasticsearch:9200
            - ASPNETCORE_URLS=http://+:80
            - KAFKA_BROKER=kafka:29092
        depends_on:
            - elasticsearch
            - kafka
            - sqlserver
        networks:
            - dev

volumes:
    elastic_data:
    k_secrets:
    sqldata:
    zk_data:
    zk_log:


networks:
    dev:
        driver: bridge
